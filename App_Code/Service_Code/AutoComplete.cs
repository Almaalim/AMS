using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Services;
using System.Data;
using System.Text;
using System.Data.SqlClient;

[WebService(Namespace = "http://tempuri.org/")]
[WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]
[System.Web.Script.Services.ScriptService]
public class AutoComplete : WebService
{
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    DBFun DBCs = new DBFun();
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public AutoComplete() { }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    protected string[] EmployeeIDList(string Type, bool isDep, bool isCon, string prefix, int count)
    {
        string lang    = (Convert.ToString(Session["Language"]) == "AR") ? "Ar" : "En";
        string DepList = string.IsNullOrEmpty(Convert.ToString(Session["DepartmentList"])) ? "0" : Session["DepartmentList"].ToString();
        string EmpCon  = string.IsNullOrEmpty(Convert.ToString(Session["EmpConSelect"])) ? "" : Session["EmpConSelect"].ToString();

        StringBuilder Q = new StringBuilder();
        Q.Append(" SELECT EmpID + '-' + EmpName" + lang + " EmpName ");
        Q.Append(" FROM spActiveEmployeeView ");
        if (Type == "ID") { Q.Append(" WHERE EmpID + '-' + EmpName" + lang +" LIKE '%" + prefix + "%'"); } else if (Type == "NAME") { Q.Append(" WHERE EmpName" + lang +" LIKE '%" + prefix + "%'"); }
        if (isCon) { Q.Append(" AND DepID IN (" + DepList + ") "); }
        if (isCon) { Q.Append(" " + EmpCon + " "); }

        List<string> items = new List<string>(count);
        DataTable DT = DBCs.FetchData(new SqlCommand(Q.ToString()));
        if (!DBCs.IsNullOrEmpty(DT)) { for (int i = 0; i < DT.Rows.Count; i++) { items.Add(Convert.ToString(DT.Rows[i]["EmpName"])); } }

        return items.ToArray();
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    [WebMethod(true)]
    public string[] GetEmployeeIDList(string prefixText, int count) { return EmployeeIDList("ID", false, true,prefixText, count); }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    [WebMethod(true)]
    public string[] GetEmployeeIDListWithCon(string prefixText, int count) { return EmployeeIDList("ID", true, true, prefixText, count); }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    [WebMethod(true)]
    public string[] GetEmployeeIDListWithCon2(string prefixText, int count) { return EmployeeIDList("ID", true, false, prefixText, count); }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    [WebMethod(true)]
    public string[] GetEmployeeNameList(string prefixText, int count) { return EmployeeIDList("NAME", false, true,prefixText, count); }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    [WebMethod(true)]
    public string[] GetEmployeeNameListWithCon(string prefixText, int count) { return EmployeeIDList("NAME", true, true,prefixText, count); }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    [WebMethod(true)]
    public string[] GetDepNameList(string prefixText, int count)
    {
        string lang    = (Convert.ToString(Session["Language"]) == "AR") ? "Ar" : "En";
        string DepList = string.IsNullOrEmpty(Convert.ToString(Session["DepartmentList"])) ? "0" : Session["DepartmentList"].ToString();

        StringBuilder Q = new StringBuilder();
        Q.Append(" SELECT DepName" + lang +" + '-' + CONVERT(VARCHAR(100),DepID) DepName FROM Department WHERE ISNULL(DepDeleted,0) = 0 AND DepID IN (" + DepList + ") AND DepName" + lang +" LIKE '%" + prefixText + "%' ");

        List<string> items = new List<string>(count);
        DataTable DT = DBCs.FetchData(new SqlCommand(Q.ToString()));
        if (!DBCs.IsNullOrEmpty(DT)) { for (int i = 0; i < DT.Rows.Count; i++) { items.Add(Convert.ToString(DT.Rows[i]["DepName"])); } }

        return items.ToArray();
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
